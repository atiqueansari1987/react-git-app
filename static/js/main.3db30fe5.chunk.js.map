{"version":3,"sources":["components/Header.js","components/Organization.js","components/Repository.js","components/User.js","App.js","serviceWorker.js","stores/Store.js","index.js"],"names":["Header","_this$props$Store","this","props","Store","username","blankUsernameError","loading","apiErrorMessage","updateUsername","searchUserDetails","dismissValidationAlert","dismissApiErrorAlert","react_default","a","createElement","Row","Col","Alert","color","isOpen","toggle","fade","InputGroup","InputGroupAddon","addonType","Input","placeholder","value","onChange","e","onKeyPress","_ref","key","Button","size","onClick","className","Spinner","style","width","height","Component","compose","inject","observer","Organization","organizations","Table","striped","bordered","hover","length","map","org","index","login","description","colSpan","Repository","repositories","responsive","repo","NavLink","href","html_url","target","name","language","User","userDetails","xs","src","avatar_url","alt","App","Container","components_Header","Object","keys","Fragment","components_User","components_Repository","components_Organization","Boolean","window","location","hostname","match","configure","enforceActions","GitStore","_this","classCallCheck","trim","userUrl","concat","repositoryUrl","organizationUrl","axios","all","get","then","_ref2","slicedToArray","runInAction","data","catch","_ref3","response","message","decorate","observable","action","ReactDOM","render","index_module","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3db30fe5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { compose } from 'recompose';\nimport {\n  Row,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button,\n  Alert,\n  Spinner\n} from 'reactstrap';\n\nclass Header extends Component {\n  render() {\n    const {\n      username,\n      blankUsernameError,\n      loading,\n      apiErrorMessage,\n      updateUsername,\n      searchUserDetails,\n      dismissValidationAlert,\n      dismissApiErrorAlert\n    } = this.props.Store;\n\n    return (\n      <Row>\n        <Col>\n          {blankUsernameError ? (\n            <Row>\n              <Alert\n                color=\"primary\"\n                isOpen={blankUsernameError}\n                toggle={() => dismissValidationAlert()}\n                fade={false}\n              >\n                Please provide GIT username\n              </Alert>\n            </Row>\n          ) : null}\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n                <Input\n                  placeholder=\"GIT username\"\n                  value={username}\n                  onChange={e => updateUsername(e)}\n                  onKeyPress={({ key }) =>\n                    key === 'Enter' ? searchUserDetails() : null\n                  }\n                />\n              </InputGroup>\n            </Col>\n            <Col>\n              <Button\n                color=\"primary\"\n                size=\"sm\"\n                onClick={() => searchUserDetails()}\n              >\n                Search\n              </Button>\n            </Col>\n          </Row>\n\n          {loading ? (\n            <Row className=\"top-buffer\">\n              <Col>\n                <Spinner style={{ width: '3rem', height: '3rem' }} />\n              </Col>\n            </Row>\n          ) : null}\n\n          {apiErrorMessage ? (\n            <Row className=\"top-buffer\">\n              <Col>\n                <Alert\n                  color=\"danger\"\n                  toggle={() => dismissApiErrorAlert()}\n                  fade={false}\n                >\n                  {apiErrorMessage}\n                </Alert>\n              </Col>\n            </Row>\n          ) : null}\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default compose(\n  inject('Store'),\n  observer\n)(Header);\n","import React, { Component } from 'react';\nimport { Row, Col, Table } from 'reactstrap';\nimport { observer, inject } from 'mobx-react';\nimport { compose } from 'recompose';\n\nclass Organization extends Component {\n  render() {\n    const { organizations } = this.props.Store;\n\n    return (\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <h1>Organizations</h1>\n              <hr className=\"bg-dark\" />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {organizations.length ? (\n                    organizations.map((org, index) => (\n                      <tr key={index + 1}>\n                        <th>{index + 1}</th>\n                        <td>{org.login}</td>\n                        <td>{org.description}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan=\"4\">\n                        User doesn't have any public Organizations.\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default compose(\n  inject('Store'),\n  observer\n)(Organization);\n","import React, { Component } from 'react';\nimport { Row, Col, Table, NavLink } from 'reactstrap';\nimport { observer, inject } from 'mobx-react';\nimport { compose } from 'recompose';\n\nclass Repository extends Component {\n  render() {\n    const { repositories } = this.props.Store;\n\n    return (\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <h1>Repositories</h1>\n              <hr className=\"bg-dark\" />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Table striped bordered hover responsive>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Language</th>\n                    <th>Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {repositories.length ? (\n                    repositories.map((repo, index) => (\n                      <tr key={index + 1}>\n                        <th>{index + 1}</th>\n                        <td>\n                          <NavLink href={repo.html_url} target=\"_blank\">\n                            {repo.name}\n                          </NavLink>\n                        </td>\n                        <td>{repo.language}</td>\n                        <td>{repo.description}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan=\"4\">\n                        User doesn't have any public Repositories.\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default compose(\n  inject('Store'),\n  observer\n)(Repository);\n","import React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { observer, inject } from 'mobx-react';\nimport { compose } from 'recompose';\n\nclass User extends Component {\n  render() {\n    const { userDetails } = this.props.Store;\n\n    return (\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <h1>User</h1>\n              <hr className=\"bg-dark\" />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"1\">\n              <img\n                className=\"rounded-circle img-fluid\"\n                src={userDetails.avatar_url}\n                alt={userDetails.name}\n              />\n            </Col>\n            <Col>\n              <h2>{userDetails.name}</h2>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default compose(\n  inject('Store'),\n  observer\n)(User);\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { compose } from 'recompose';\nimport { Container, Row } from 'reactstrap';\nimport Header from './components/Header';\nimport Organization from './components/Organization';\nimport Repository from './components/Repository';\nimport User from './components/User';\n\nclass App extends Component {\n  render() {\n    const { userDetails } = this.props.Store;\n\n    return (\n      <Container>\n        <Row className=\"top-buffer\" />\n        <Header />\n        <Row className=\"middle-buffer\" />\n        {Object.keys(userDetails).length > 0 ? (\n          <>\n            <User />\n            <Row className=\"middle-buffer\" />\n            <Repository />\n            <Row className=\"middle-buffer\" />\n            <Organization />\n          </>\n        ) : null}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  inject('Store'),\n  observer\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action, decorate, configure, runInAction } from 'mobx';\nimport axios from 'axios';\n\n// don't allow state modifications outside actions\nconfigure({ enforceActions: 'always' });\n\n// Documentation is at https://developer.github.com/v3/\nconst GIT_BASE_URL = 'https://api.github.com';\n\nexport class GitStore {\n  username = '';\n  blankUsernameError = false;\n  loading = false;\n  apiErrorMessage = '';\n  userDetails = {};\n  repositories = [];\n  organizations = [];\n\n  updateUsername = e => {\n    this.username = e.target.value.trim();\n\n    if (this.username !== '') {\n      this.blankUsernameError = false;\n    }\n  };\n\n  searchUserDetails = () => {\n    this.apiErrorMessage = '';\n    this.userDetails = {};\n    this.repositories = [];\n    this.organizations = [];\n\n    if (this.username === '') {\n      this.blankUsernameError = true;\n\n      return;\n    }\n\n    this.blankUsernameError = false;\n    this.loading = true;\n\n    // Make requests to fetch user details, repositories and organizations from GIT\n    const userUrl = `${GIT_BASE_URL}/users/${this.username}`;\n    const repositoryUrl = `${userUrl}/repos?per_page=250`;\n    const organizationUrl = `${userUrl}/orgs`;\n\n    axios\n      .all([\n        axios.get(userUrl),\n        axios.get(repositoryUrl),\n        axios.get(organizationUrl)\n      ])\n      .then(([userDetails, repositories, organizations]) => {\n        runInAction(() => {\n          this.userDetails = userDetails.data;\n          this.repositories = repositories.data;\n          this.organizations = organizations.data;\n          this.loading = false;\n        });\n      })\n      .catch(({ response }) => {\n        runInAction(() => {\n          this.loading = false;\n          this.apiErrorMessage = response.data.message;\n        });\n      });\n  };\n\n  dismissValidationAlert = e => {\n    this.blankUsernameError = false;\n  };\n\n  dismissApiErrorAlert = e => {\n    this.apiErrorMessage = '';\n  };\n}\n\nconst Store = new GitStore();\n\ndecorate(Store, {\n  username: observable,\n  blankUsernameError: observable,\n  loading: observable,\n  apiErrorMessage: observable,\n  userDetails: observable,\n  repositories: observable,\n  organizations: observable,\n  updateUsername: action,\n  searchUserDetails: action,\n  dismissValidationAlert: action,\n  dismissApiErrorAlert: action\n});\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport App from './App';\nimport './custom.scss';\nimport * as serviceWorker from './serviceWorker';\n\nimport Store from './stores/Store';\n\nReactDOM.render(\n  <Provider Store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}